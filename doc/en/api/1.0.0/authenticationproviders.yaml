openapi: 3.0.3
info:
  title: Authentication-provider REST API
  version: "1.0.0"
  description: |
    Manage, order, enable and disable GeoServer authentication providers.

    Each provider is marshalled inside an element / property whose **key
    is its concrete class name**.

servers:
  - url: http://localhost:8080/geoserver/rest
    description: Local GeoServer

security:
  - basicAuth: []

components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
      description: GeoServer administrator credentials

  schemas:

    # ---- Inner object with actual fields ----------------------------------
    authProviderCore:
      type: object
      required: [id, name, className]
      additionalProperties: true
      properties:
        id:
          type: string
          description: Server-generated identifier (omit on POST)
        name:
          type: string
        className:
          type: string
        userGroupServiceName:
          type: string

    # ---- Wrapper keyed by FQCN -------------------------------------------
    authProvider:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/authProviderCore'
      example:
        org.geoserver.security.config.UsernamePasswordAuthenticationProviderConfig:
          id: 52857278:13c7ffd66a8:-7ff0
          name: default
          className: org.geoserver.security.auth.UsernamePasswordAuthenticationProvider
          userGroupServiceName: default

    # ---- Collection -------------------------------------------------------
    authProviders:
      type: object
      properties:
        authProviders:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/authProvider'
      example:
        authProviders:
          org.geoserver.security.config.UsernamePasswordAuthenticationProviderConfig:
            id: 52857278:13c7ffd66a8:-7ff0
            name: default
            className: org.geoserver.security.auth.UsernamePasswordAuthenticationProvider
            userGroupServiceName: default
          org.geoserver.security.config.LdapAuthenticationProviderConfig:
            id: 9abcc9d4:e30aef012cf:-7fe0
            name: corporateLdap
            className: org.geoserver.security.auth.LdapAuthenticationProvider
            userGroupServiceName: ldapUsers

    # ---- Order payload ----------------------------------------------------
    authProviderOrder:
      type: object
      required: [order]
      properties:
        order:
          type: array
          items:
            type: string
      example:
        order: [default, corporateLdap]

paths:

  /security/authProviders:
    get:
      summary: List providers (active order)
      tags: [authProviders]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: { $ref: '#/components/schemas/authProviders' }
              example:
                authProviders:
                  org.geoserver.security.config.UsernamePasswordAuthenticationProviderConfig:
                    id: 52857278:13c7ffd66a8:-7ff0
                    name: default
                    className: org.geoserver.security.auth.UsernamePasswordAuthenticationProvider
                    userGroupServiceName: default
            application/xml:
              schema: { $ref: '#/components/schemas/authProviders' }
              example: |
                <authProviders>
                  <org.geoserver.security.config.UsernamePasswordAuthenticationProviderConfig>
                    <id>52857278:13c7ffd66a8:-7ff0</id>
                    <name>default</name>
                    <className>org.geoserver.security.auth.UsernamePasswordAuthenticationProvider</className>
                    <userGroupServiceName>default</userGroupServiceName>
                  </org.geoserver.security.config.UsernamePasswordAuthenticationProviderConfig>
                </authProviders>
        '403': {description: Forbidden}
        '500': {description: Server error}

    post:
      summary: Create a provider
      tags: [authProviders]
      parameters:
        - in: query
          name: position
          schema:
            type: integer
            minimum: 0
          description: Optional insert position (0-based). Omit to append.
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '#/components/schemas/authProvider' }
            example:
              org.geoserver.security.config.UsernamePasswordAuthenticationProviderConfig:
                name: corporateLdap
                className: org.geoserver.security.auth.LdapAuthenticationProvider
                userGroupServiceName: ldapUsers
          application/xml:
            schema: { $ref: '#/components/schemas/authProvider' }
            example: |
              <org.geoserver.security.config.UsernamePasswordAuthenticationProviderConfig>
                <name>corporateLdap</name>
                <className>org.geoserver.security.auth.LdapAuthenticationProvider</className>
                <userGroupServiceName>ldapUsers</userGroupServiceName>
              </org.geoserver.security.config.UsernamePasswordAuthenticationProviderConfig>
      responses:
        '201':
          description: Created
          headers:
            Location:
              schema:
                type: string
                format: uri
          content:
            application/json: {schema: {$ref: '#/components/schemas/authProvider'}}
            application/xml:  {schema: {$ref: '#/components/schemas/authProvider'}}
        '400': {description: Validation error}
        '403': {description: Forbidden}
        '500': {description: Server error}

  /security/authProviders/{providerName}:
    parameters:
      - name: providerName
        in: path
        required: true
        schema:
          type: string

    get:
      summary: Get provider
      tags: [authProviders]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: { $ref: '#/components/schemas/authProvider' }
              example:
                org.geoserver.security.config.UsernamePasswordAuthenticationProviderConfig:
                  id: 52857278:13c7ffd66a8:-7ff0
                  name: default
                  className: org.geoserver.security.auth.UsernamePasswordAuthenticationProvider
                  userGroupServiceName: default
            application/xml:
              schema: { $ref: '#/components/schemas/authProvider' }
              example: |
                <org.geoserver.security.config.UsernamePasswordAuthenticationProviderConfig>
                  <id>52857278:13c7ffd66a8:-7ff0</id>
                  <name>default</name>
                  <className>org.geoserver.security.auth.UsernamePasswordAuthenticationProvider</className>
                  <userGroupServiceName>default</userGroupServiceName>
                </org.geoserver.security.config.UsernamePasswordAuthenticationProviderConfig>
        '403': {description: Forbidden}
        '404': {description: Not found}
        '500': {description: Server error}

    put:
      summary: Update provider
      tags: [authProviders]
      parameters:
        - in: query
          name: position
          schema:
            type: integer
            minimum: 0
          description: Move provider to this position
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '#/components/schemas/authProvider' }
            example:
              org.geoserver.security.config.UsernamePasswordAuthenticationProviderConfig:
                id: 52857278:13c7ffd66a8:-7ff0
                name: default
                className: org.geoserver.security.auth.UsernamePasswordAuthenticationProvider
                userGroupServiceName: default
          application/xml:
            schema: { $ref: '#/components/schemas/authProvider' }
            example: |
              <org.geoserver.security.config.UsernamePasswordAuthenticationProviderConfig>
                <id>52857278:13c7ffd66a8:-7ff0</id>
                <name>default</name>
                <className>org.geoserver.security.auth.UsernamePasswordAuthenticationProvider</className>
                <userGroupServiceName>default</userGroupServiceName>
              </org.geoserver.security.config.UsernamePasswordAuthenticationProviderConfig>
      responses:
        '200':
          description: Updated
          content:
            application/json: {schema: {$ref: '#/components/schemas/authProvider'}}
            application/xml:  {schema: {$ref: '#/components/schemas/authProvider'}}
        '400': {description: Validation error}
        '403': {description: Forbidden}
        '404': {description: Not found}
        '500': {description: Server error}

    delete:
      summary: Delete provider
      tags: [authProviders]
      responses:
        '200': {description: Deleted}
        '403': {description: Forbidden}
        '404': {description: Not found}
        '500': {description: Server error}

  /security/authProviders/order:
    put:
      summary: Replace active order (enables / disables providers)
      tags: [authProviders]
      requestBody:
        required: true
        content:
          application/json:
            schema: {$ref: '#/components/schemas/authProviderOrder'}
          application/xml:
            schema: {$ref: '#/components/schemas/authProviderOrder'}
            example: |
              <order>
                <order>default</order>
                <order>corporateLdap</order>
              </order>
      responses:
        '200': {description: Order updated}
        '400': {description: Validation error}
        '403': {description: Forbidden}
        '500': {description: Server error}

    get:
      summary: Method not allowed
      responses: {'405': {description: Use PUT}}

    post:
      summary: Method not allowed
      responses: {'405': {description: Use PUT}}

    delete:
      summary: Method not allowed
      responses: {'405': {description: Use PUT}}
